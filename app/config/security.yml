   
security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        FOS\UserBundle\Model\UserInterface: sha512
        Blogger\UserBundle\Entity\User:
            algorithm: md5
            encode_as_base64: true
            iterations: 1

    role_hierarchy:
        ROLE_USER:        [ROLE_USER ] 
        ROLE_ADMIN:       [ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        SONATA:
            #- ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT  # if you are using acl then this line must be commented
            - ROLE_SONATA_PAGE_ADMIN_BLOCK_EDIT

    providers:
       chainprovider:
               chain:
                providers: [ main ]
           
       in_memory:
               memory:
                  users:
                      user:  { password: userpass, roles: [ 'ROLE_USER' ] }
                      admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
       main:
           entity: 
               class: Blogger\UserBundle\Entity\User
       
       fos_userbundle:
            id: fos_user.user_provider.username_email
               
               
    firewalls:
       admin:
            switch_user:        true
            context:            user
            pattern:            /admin(.*)
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
                use_referer:    true
            logout:
                path:           /admin/logout
                target:         /admin/login
            anonymous:    true
            remember_me:
                key:      9034895c8e6816cad3f8fc4d3171bce10
                lifetime: 3600
                path:     /
                domain:   ~
                
       secured_area:
            pattern:    ^/
            form_login: 
                login_path:  /login
                check_path:  /login_check
                default_target_path: BloggerBlogBundle_homepage
            remember_me:
               key: "%secret%"
               lifetime: 31536000
               path: /
               domain: ~
            logout: 
                path: /logout
                target: /login
                invalidate_session: true
            anonymous: ~
            http_basic:
                realm: "Secured Area"

    access_control:
        - { path: ^/user , roles: ROLE_USER }
        - { path: ^/task , roles: ROLE_USER }
        - { path: ^/profile , roles: ROLE_USER }
        
        # -> custom access control for the admin area of the URL
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login-check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # -> end

        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }

        
